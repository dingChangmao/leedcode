"""
给定两个字符串 s1 和 s2，写一个函数来判断 s2 是否包含 s1 的排列。
换句话说，第一个字符串的排列之一是第二个字符串的子串
输入: s1 = "ab" s2 = "eidbaooo"
输出: True
解释: s2 包含 s1 的排列之一 ("ba").
输入: s1= "ab" s2 = "eidboaoo"
输出: False
输入的字符串只包含小写字母
两个字符串的长度都在 [1, 10,000] 之间
"""
import copy


class Solution:
    def checkInclusion(self, s1,s2):
        length = len(s1)
        if len(s1) > len(s2):
            return False
        s1d = {}
        s2d = {}
        for i in s1:
            s1d[i] = s1d.get(i, 0) + 1
        for i in s2[:length]:
            s2d[i] = s2d.get(i, 0) + 1
        for i in range(1, len(s2)-length+1):
            if s1d == s2d:
                return True
            s2d[s2[i-1]] -= 1
            if s2d[s2[i-1]] == 0:
                s2d.pop(s2[i-1])
            s2d[s2[i+length-1]] = s2d.get(s2[i+length-1], 0) + 1
        if s1d == s2d:
            return True
        return False
print(Solution().checkInclusion('aaaba','aabaa'))
